// Date: 24/01/2014 21:58:10
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package org.cyclops.evilcraft.client.render.model;

import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import org.cyclops.evilcraft.entity.monster.Werewolf;

/**
 * @author Davivs69
 */
public class ModelWerewolf extends ModelBiped {
    //fields
    ModelRenderer bipedEar1;
    ModelRenderer bipedEar2;
    ModelRenderer Upper_Jaw;
    ModelRenderer Lower_Jaw;

    /**
     * Make a new instance.
     */
    public ModelWerewolf() {
        this.textureWidth = 64;
        this.textureHeight = 135;
        bipedHead = new ModelRenderer(this, 24, 0);
        bipedHead.addBox(-5F, -10F, -5F, 10, 10, 10);
        bipedHead.setRotationPoint(0F, -13F, 0F);
        bipedHead.setTextureSize(64, 135);
        bipedHead.mirror = true;
        setRotation(bipedHead, 0F, 0F, 0F);
        bipedEar1 = new ModelRenderer(this, 18, 0);
        bipedEar1.addBox(-4F, -14F, 2F, 2, 4, 1);
        bipedEar1.setRotationPoint(0F, -13F, 0F);
        bipedEar1.setTextureSize(64, 135);
        bipedEar1.mirror = true;
        setRotation(bipedEar1, 0F, 0F, 0F);
        bipedEar2 = new ModelRenderer(this, 12, 0);
        bipedEar2.addBox(2F, -14F, 2F, 2, 4, 1);
        bipedEar2.setRotationPoint(0F, -13F, 0F);
        bipedEar2.setTextureSize(64, 135);
        bipedEar2.mirror = true;
        setRotation(bipedEar2, 0F, 0F, 0F);
        Upper_Jaw = new ModelRenderer(this, 32, 122);
        Upper_Jaw.addBox(-3F, -7F, -11F, 6, 3, 10);
        Upper_Jaw.setRotationPoint(0F, -13F, 0F);
        Upper_Jaw.setTextureSize(64, 135);
        Upper_Jaw.mirror = true;
        setRotation(Upper_Jaw, 0F, 0F, 0F);
        Lower_Jaw = new ModelRenderer(this, 0, 122);
        Lower_Jaw.addBox(-3F, -4F, -10F, 6, 2, 10);
        Lower_Jaw.setRotationPoint(0F, -13F, 0F);
        Lower_Jaw.setTextureSize(64, 135);
        Lower_Jaw.mirror = true;
        setRotation(Lower_Jaw, 0.1745329F, 0F, 0F);
        bipedBody = new ModelRenderer(this, 12, 20);
        bipedBody.addBox(-7F, 0F, -6F, 14, 19, 12);
        bipedBody.setRotationPoint(0F, -13F, 0F);
        bipedBody.setTextureSize(64, 135);
        bipedBody.mirror = true;
        setRotation(bipedBody, 0F, 0F, 0F);
        bipedRightArm = new ModelRenderer(this, 22, 51);
        bipedRightArm.addBox(-4F, -2F, -16F, 4, 4, 17);
        bipedRightArm.setRotationPoint(-7F, -8F, 0F);
        bipedRightArm.setTextureSize(64, 135);
        bipedRightArm.mirror = true;
        setRotation(bipedRightArm, 0.1047198F, 0F, 0F);
        bipedLeftArm = new ModelRenderer(this, 0, 72);
        bipedLeftArm.addBox(0F, -2F, -16F, 4, 4, 17);
        bipedLeftArm.setRotationPoint(7F, -8F, 0F);
        bipedLeftArm.setTextureSize(64, 135);
        bipedLeftArm.mirror = true;
        setRotation(bipedLeftArm, 0.1047198F, 0F, 0F);
        bipedRightLeg = new ModelRenderer(this, 44, 93);
        bipedRightLeg.addBox(-2.5F, 0F, -2.5F, 5, 18, 5);
        bipedRightLeg.setRotationPoint(-3F, 6F, 0F);
        bipedRightLeg.setTextureSize(64, 135);
        bipedRightLeg.mirror = true;
        setRotation(bipedRightLeg, 0F, 0F, 0F);
        bipedLeftLeg = new ModelRenderer(this, 24, 93);
        bipedLeftLeg.addBox(-2.5F, 0F, -2.5F, 5, 18, 5);
        bipedLeftLeg.setRotationPoint(3F, 6F, 0F);
        bipedLeftLeg.setTextureSize(64, 135);
        bipedLeftLeg.mirror = true;
        setRotation(bipedLeftLeg, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        bipedHead.render(f5);
        bipedEar1.render(f5);
        bipedEar2.render(f5);
        Upper_Jaw.render(f5);
        Lower_Jaw.render(f5);
        bipedBody.render(f5);
        bipedRightArm.render(f5);
        bipedLeftArm.render(f5);
        bipedRightLeg.render(f5);
        bipedLeftLeg.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
    
    @Override
    public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity entity) {
        super.setRotationAngles(par1, par2, par3, par4, par5, par6, entity);
        bipedHead.setRotationPoint(0F, -13F, 0F);
        bipedRightArm.setRotationPoint(-7F, -8F, 0F);
        bipedLeftArm.setRotationPoint(7F, -8F, 0F);
        bipedRightLeg.setRotationPoint(-3F, 6F, 0F);
        bipedLeftLeg.setRotationPoint(3F, 6F, 0F);
        
        this.bipedEar1.rotateAngleY = this.bipedHead.rotateAngleY;
        this.bipedEar1.rotateAngleX = this.bipedHead.rotateAngleX;
        this.bipedEar2.rotateAngleY = this.bipedHead.rotateAngleY;
        this.bipedEar2.rotateAngleX = this.bipedHead.rotateAngleX;
        
        if(entity instanceof Werewolf) {
            Werewolf werewolf = (Werewolf) entity;
            float barkRotation = werewolf.getBarkProgressScaled(0.1745329F);
            setRotation(Upper_Jaw, this.bipedHead.rotateAngleX + 0F, this.bipedHead.rotateAngleY + 0F, 0F);
            setRotation(Lower_Jaw, this.bipedHead.rotateAngleX + barkRotation, this.bipedHead.rotateAngleY + 0F, 0F);
        }
    }

}
